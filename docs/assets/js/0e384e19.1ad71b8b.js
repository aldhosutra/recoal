"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[976],{2053:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"intro","title":"intro","description":"Header","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/aldhosutra/reqoal/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar"}');var l=s(4848),a=s(8453);const c={sidebar_position:1},r="reqoal",t={},o=[{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Global Instance (Simple)",id:"global-instance-simple",level:3},{value:"Custom Instance (Advanced)",id:"custom-instance-advanced",level:3},{value:"API",id:"api",level:2},{value:"Global Exports",id:"global-exports",level:3},{value:"ReqoalInstance",id:"reqoalinstance",level:3},{value:"ESM &amp; CJS Compatibility",id:"esm--cjs-compatibility",level:2},{value:"License",id:"license",level:2},{value:"Links",id:"links",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://raw.githubusercontent.com/aldhosutra/reqoal/HEAD/website/static/img/docusaurus-social-card.jpg",alt:"Header"})}),"\n",(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"reqoal",children:"reqoal"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.img,{src:"https://img.shields.io/github/repo-size/aldhosutra/reqoal",alt:"Repo Size"}),"\n",(0,l.jsx)(n.a,{href:"https://opensource.org/license/mit",children:(0,l.jsx)(n.img,{src:"https://img.shields.io/github/license/aldhosutra/reqoal?color=green",alt:"License: MIT"})})]}),"\n",(0,l.jsx)(n.p,{children:"A lightweight and efficient JavaScript/TypeScript library for request coalescing \u2014 merge concurrent identical async calls into a single request to reduce load and improve performance."}),"\n",(0,l.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Coalesce concurrent or repeated calls for the same function and arguments"}),"\n",(0,l.jsx)(n.li,{children:"Supports both async and sync functions"}),"\n",(0,l.jsx)(n.li,{children:"Caches results for a configurable TTL"}),"\n",(0,l.jsx)(n.li,{children:"Periodically prunes expired cache entries (automatic memory management)"}),"\n",(0,l.jsx)(n.li,{children:"Manual cache invalidation and pruning"}),"\n",(0,l.jsx)(n.li,{children:"Custom key generator for advanced cache strategies"}),"\n",(0,l.jsx)(n.li,{children:"Concurrency limit per instance"}),"\n",(0,l.jsx)(n.li,{children:"ESM & CJS compatible"}),"\n",(0,l.jsx)(n.li,{children:"TypeScript-first, with full type safety"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"npm install reqoal\n"})}),"\n",(0,l.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(n.h3,{id:"global-instance-simple",children:"Global Instance (Simple)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"import { coalesce, isCoalesced, invalidate, clear, prune, setKeyGenerator } from 'reqoal';\n\n// Async or sync function\nasync function fetchUser(id) {\n\t/* ... */\n}\nfunction add(a, b) {\n\treturn a + b;\n}\n\n// Coalesce requests\nconst user = await coalesce(fetchUser, 123);\nconst sum = await coalesce(add, 1, 2); // works with sync too!\n\n// Check if a request is in-flight or cached\nconst active = isCoalesced(fetchUser, 123);\n\n// Invalidate cache for a specific call\ninvalidate(fetchUser, 123);\n\n// Clear all cache and in-flight requests\nclear();\n\n// Manually prune expired cache entries (optional)\nprune();\n\n// Set a custom key generator (advanced)\nsetKeyGenerator((functionName, ...args) => `${functionName}:${args.join('-')}`);\n"})}),"\n",(0,l.jsx)(n.h3,{id:"custom-instance-advanced",children:"Custom Instance (Advanced)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"import { ReqoalInstance } from 'reqoal';\n\nconst coalescer = new ReqoalInstance(\n\t60000, // prune interval (ms)\n\t1000, // TTL (ms)\n\tconsole, // custom logger\n\t5, // max concurrency\n);\n\nawait coalescer.coalesce(fetchUser, 123);\ncoalescer.setKeyGenerator((functionName, ...args) => `${functionName}:${args.join('-')}`);\n"})}),"\n",(0,l.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,l.jsx)(n.h3,{id:"global-exports",children:"Global Exports"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"coalesce(fn, ...args)"})," \u2014 Coalesce and cache requests"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"isCoalesced(fn, ...args)"})," \u2014 Check if a request is in-flight or cached"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"invalidate(fn, ...args)"})," \u2014 Invalidate cache for a specific call"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"clear()"})," \u2014 Clear all cache and in-flight requests"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"prune()"})," \u2014 Manually prune expired cache entries"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"setKeyGenerator(fn)"})," \u2014 Set a custom key generator"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"reqoalinstance",children:"ReqoalInstance"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"new ReqoalInstance(intervalMs?, ttlMs?, consoler?, maxConcurrency?)"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:".coalesce(fn, ...args)"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:".isCoalesced(fn, ...args)"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:".invalidate(fn, ...args)"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:".clear()"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:".prune()"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:".setKeyGenerator(fn)"})}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"esm--cjs-compatibility",children:"ESM & CJS Compatibility"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["ESM: ",(0,l.jsx)(n.code,{children:"import { coalesce } from 'reqoal'"})]}),"\n",(0,l.jsxs)(n.li,{children:["CJS: ",(0,l.jsx)(n.code,{children:"const { coalesce } = require('reqoal')"})]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,l.jsx)(n.p,{children:"MIT"}),"\n",(0,l.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://github.com/aldhosutra/reqoal",children:"GitHub Repository"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://reqoal.js.org",children:"Documentation"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://github.com/aldhosutra/reqoal/issues",children:"Report Issues"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}}}]);